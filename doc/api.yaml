openapi: 3.0.3 
servers:
  - url: "http://localhost:3000"
info:
  title: WASAText API
  description: WASAText - Messaging app API spec for WASA course
  version: "1.0.0"
paths:
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user
      description: |-
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Maria
                  pattern: '^.*?$'
                  minLength: 3
                  maxLength: 16
        required: true
      responses:
        '201':
          description: User log-in action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
                    example: "abcdef012345"

  /me/username:
    put:
      tags: ["profile"]
      operationId: setMyUserName
      summary: Change user display name
      description: Change your display name
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "NewName"
      responses:
        '200':
          description: Name changed successfully
        '401':
          description: Unauthorized #Token assente
        '404':
          description: Not found #Utente non esiste
        '400':
          description: Bad request #Name mancante
 
  /me/photo:
    put:
      tags: ["profile"]
      operationId: setMyPhoto
      summary: Upload or update user profile photo 
      security: 
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema: 
              type: object
              properties:
                photo:
                  type: string 
                  format: binary
      responses:
        '200':
          description: Photo uploaded
        '401':
            description: Unauthorized
        '404':
            description: Not found
        '400':
            description: Bad request       

  /me/conversations:
    get:
      tags: ["conversations"]
      operationId: getMyConversations
      summary: Get all conversations for the current user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of conversations returned 
        '401':
            description: Unauthorized
        '404':
            description: Not found
        '400':
            description: Bad request
  
  /conversations/{id}:
    get:
      tags: ["conversations"]
      operationId: getConversation 
      summary: Get full conversation by id
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: conversation returned 
        '401':
            description: Unauthorized
        '404':
            description: Not found
        '400':
            description: Bad request

  /conversations/{id}/messages:
    post:
      tags: ["messages"]
      operationId: sendMessage
      summary: Send a new message
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
                  example: "Hey, how you doin?"
                timestamp:
                  type: string
                  format: date-time
                  example: "2025-07-28T15:45:00Z"
      responses:
        '201':
          description: Message sent
        '401':
            description: Unauthorized
        '404':
            description: Not found
        '400':
            description: Bad request
  
  /messages/{id}/forward:
    post:
      tags: ["messages"]
      operationId: forwardMessage
      summary: Forward a message to another conversation
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string    
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - conversationId
              properties:
                conversationId:
                  type: string
                  example: "124u8429djnkf"
      responses:
        '200':
          description: Message forwarded
        '401':
            description: Unauthorized
        '404':
            description: Not found
        '400':
            description: Bad request
 
  /messages/{id}/comments:
    post:
      tags: ["messages"]
      operationId: commentMessage
      summary: Add a reaction to message
      security:
        - BearerAuth: []
      parameters:
        - name: id 
          in: path
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Comment added
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '400':
          description: Bad request
    delete:
      tags: ["messages"]
      operationId: uncommentMessage
      summary: Remove a comment from a messsage
      security: 
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
          '200':
            description: Comment removed
          '401':
            description: Unauthorized
          '404':
            description: Not found
          '400':
            description: Bad request

  /messages/{id}:
    delete:
      tags: ["messages"]
      operationId: deleteMessage
      summary: Delete a message
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Message deleted
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '400':
          description: Bad request

  /groups/{id}/members:
    post:
      tags: ["groups"]
      operationId: addToGroup
      summary: Add user to a group 
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User added to a group
        '401':
            description: Unauthorized
        '404':
            description: Not found
        '400':
            description: Bad request
    delete:
      tags: ["groups"]
      operationId: leaveGroup
      summary: Leave a group 
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Left group
        '401':
            description: Unauthorized
        '404':
            description: Not found
        '400':
            description: Bad request 

  /groups/{id}/name:
    put:
      tags: ["groups"]
      operationId: setGroupName
      summary: Change group name 
      security:
        - BearerAuth: []
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User added to a group
        '401':
            description: Unauthorized
        '404':
            description: Not found
        '400':
            description: Bad request

  /groups/{id}/photo:
    put:
      tags: ["groups"]
      operationId: setGroupPhoto
      summary: Change group photo 
      security: 
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema: 
              type: object
              properties:
                photo:
                  type: string 
                  format: binary
      responses:
        '200':
          description: Group photo uploaded
        '401':
            description: Unauthorized
        '404':
            description: Not found
        '400':
            description: Bad request 

components:
  securitySchemes:
    BearerAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Unique user identifier returned at login